---
import { Image } from 'astro:assets';
import ScarletLogo from "../assets/scarlet-logo.astro";
import Menu from "../assets/menu.astro";
const menu_items = ['Services', 'About Us', 'Our Mission', ];
// 'Testimonials'
---
<header class="bg-black sticky top-0 left-0 font-epilogue z-50">
    <nav class="flex justify-between items-center px-4 lg:px-12 py-6 text-white">
        <ScarletLogo id="scarlet-logo" class_="nav bright cursor-pointer h-[40px] w-[40px] object-contain" width="40" height="40" />
        <ul class="hidden lg:flex justify-center unstyled">
            { menu_items.map((title) => (
                <li class="relative font-epilogue mr-12 last:mr-0 after:content-[''] after:bg-red after:absolute 
                after:bottom-[-2px] after:left-0 after:w-[0] after:h-[2px] after:transition-all origin-center
                hover:after:w-full hover:cursor-pointer" id={title.replace(/\s+/g, "-").toLowerCase()}>
                    { title }
                </li>
            )) }
        </ul>
        <button id="contact-us" type="button" class="hidden lg:flex contact font-rubik h-max px-6 py-3 rounded-md">
            Contact Us
        </button>
        <button id="toggle-navigation" type="button" class="flex lg:hidden min-w-[unset] py-1">
            <Menu />
        </button>
    </nav>
    <div id="mobile-menu" class="fixed hidden justify-end w-screen h-screen z-40">
        <div id="mask" class="absolute top-0 left-0 w-full h-full bg-[#090909d0]" />
        <ul class="mobile-menu flex flex-col z-50 min-w-[30%] w-[50vw] bg-black border-t border-t-black-100">
            { [...menu_items, 'Contact Us'].map((label) => 
            (<li class="cursor-pointer capitalize text-white-200 p-6 border-b border-b-black-100 hover:border-b-red-100 hover:text-white transition-all duration-100"
            id={`${label.replace(/\s+/g, "-").toLowerCase()}-mobile`}>{ label }</li>)) }
        </ul>
    </div>
</header>
<script>
    const in_desktop = window.matchMedia("(min-width: 1025px)").matches;
    let timeout_assign = 0;

    let nav = false; // (mobile) boolean for presenting the side navigation
    function toggleNav() { // (mobile) changing the state of the side navigation
        nav = !nav;
        const mobile_menu = document.querySelector("#mobile-menu");
        const menu = mobile_menu.querySelector("ul");

        mobile_menu.classList[ nav ? 'add':'remove' ]('flex');

        menu.classList.toggle('slide-in');

        mobile_menu.classList[ nav ? 'remove':'add' ]('hidden');

        document.body.classList.toggle('overflow-y-hidden');
    }
    const toggle_navigation = document.querySelector("#toggle-navigation"); //toggle button 
    const mask = document.querySelector("#mask"); //opacity mask

    toggle_navigation.addEventListener("click", toggleNav); // menu button listener
    mask.addEventListener("click", toggleNav); // mask-listener
    
    // Navigation bar
    const navbar: string[] = [ //used when handling the scrolling event for asisgning the active styles
        "Portrait",
        "Services",
        "About Us",
        "Our Mission",
        "Contact Us",
        "Footer"
    ];
    // "Testimonials",
    const navbar_options = ['services', 'about-us', 'our-mission']; //, 'testimonials' for asigning the active section
    const responsive_navbar = in_desktop ? navbar_options : [...navbar_options, 'contact-us']; //for asigning the navigation event listener of each section

    let last_section = ''; // for removing the last "section active styles"
    let current_section = '';
    const setActiveSection = (active_section) => { // setting the navbar "active section styles"
        
        const which_option =  ['contact-us', 'portrait'].indexOf(active_section);
        const prisma_nav = document.querySelector("svg#scarlet-logo");
        const prisma_portrait = document.querySelector("svg#prisma");

        // active_section !== last_section ? console.log('%c new section', 'color: green;'):console.log('%c same section', 'color: yellow;');
        const remove_last_nav_section_styles = () => { //if the last section is not on the navbar delete the active styles
            if (  last_section === '' ) return; 
            
            if (navbar_options.indexOf(last_section) !== -1) { // If the last section is in the navbar, remove the "active styles"
                const last_li = document.querySelector(`li#${last_section}`);
                last_li.classList.remove('active');
            }
            if (active_section === 'portrait') change_theme('bright')
        }

        const change_theme = (theme: string) => { // changing the theme (bright | dark) of the prisma illustration 
            [prisma_nav, prisma_portrait].map((image) => {
                const color_theme = {
                    bright: {
                        last: 'dark',
                        new: 'bright'
                    },
                    dark: {
                        last: 'bright',
                        new: 'dark'
                    }
                }
                if (!image.classList.contains(color_theme[theme].new)) {
                    image.classList.remove(color_theme[theme].last);
                    image.classList.add(color_theme[theme].new);
                }
            });
        }

        if ( navbar_options.indexOf(active_section) >= 0 ) { // if we are on a section labeled on the navbar
            remove_last_nav_section_styles();
            const li = document.querySelector(`li#${active_section}`);
            li.classList.add('active');
            
            change_theme('dark');
        } else if(which_option >= 0 ) { //were not on a navbar-section (portrait or contact-us)
            remove_last_nav_section_styles();
        }
        last_section = active_section; ///updating the last_section
    } // to set in which section we have scrolled currently 
    const scrollDiv = (section: any, toggle_nav: boolean = true) => {
        if (!in_desktop && toggle_nav) toggleNav();
        const y = section.getBoundingClientRect().top + window.pageYOffset + (in_desktop ? -100:-30);
        window.scrollTo({top: y, behavior: 'smooth'});
    }

    const remove_event_listeners = () => {
        timeout_assign = setTimeout(() => {
            responsive_navbar.map((option) => { // remove navigation
                    const section = document.querySelector(`section#${option}`); 
                    const li = document.querySelector(`li#${option}-mobile`);
                    li.removeEventListener("click", () => { scrollDiv(section); })
                });
        },0);
    }
    
    timeout_assign = setTimeout(() => { // assign the page navigation 
        const contact_section = document.querySelector("section#contact-us"); //contact 
        responsive_navbar.map((option) => {
            const section = document.querySelector(`section#${option}`); 
            const li = document.querySelector(`li#${option}${in_desktop ? '':'-mobile'}`);
            const a = document.querySelector(`a#footer-${option}`);
            a.addEventListener("click", () => { scrollDiv(section);  });
            li.addEventListener("click", () => { scrollDiv(section);  });
        });
        if (in_desktop) { // setting aditional navigation buttons
            const contact_btn = document.querySelector("button#contact-us");
            contact_btn.addEventListener("click", () => { scrollDiv(contact_section);  })
        }
        
        const portrait = document.querySelector("section#portrait") // portrait and logo
        const scarlet_logo = document.querySelector("#scarlet-logo");
        scarlet_logo.addEventListener("click", () => { scrollDiv(portrait, false) });

        const contact_us = document.querySelector("button#about-contact-us");
        contact_us.addEventListener("click", () => { scrollDiv(contact_section, false) });
    }, 0); //executed right away
    
    const handle_scroll = () => {
        const scrollPosition = window.scrollY + window.innerHeight / 2;
        const sections = document.querySelectorAll("section");

        for (let i = 0; i < sections.length; i++) {
            const section = sections[i];
            const offsetTop = section.offsetTop;
            const offsetBottom = offsetTop + section.offsetHeight;

            if ( scrollPosition >= offsetTop && scrollPosition < offsetBottom ) {
                const section_name = navbar[i].replace(/\s+/g, "-").toLowerCase();
                current_section = section_name;
                if (current_section === last_section) return; // If while scrolling the section hasn't changed don't execute the following
                setActiveSection(section_name);
                const DOMSection = document.querySelector(`section#${section_name}`)
                DOMSection.classList.add('show');
                break;
            }
        }
    };
    handle_scroll(); // to determine the focused section on the web page.  
    window.addEventListener("scroll", handle_scroll);
</script>
<style>
    button.contact {
        transition: all 250ms cubic-bezier(.8,.87,0,.95);
        background: linear-gradient(to bottom, #700007 0%, #E40000 50%, #700007 100%);
        background-size: auto 200%;
    }
    button.contact:hover {
        background-position: bottom right;
    }
    .slide-in {
        animation: slide-x-in 150ms ease-in-out;
    }
    @keyframes slide-x-in {
        from {
            opacity: 0;
            transform: translateX(50%);
        }
        50% {
            opacity: 1;
        }
        to {
            transform: translateX(4%);
        }
    }
    li.active {
        @apply after:w-full;
    }
</style>