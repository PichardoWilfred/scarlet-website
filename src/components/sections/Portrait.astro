---
import ScarletLogo from "../scarlet-logo.vue";
---

<section class="portrait relative max-lg:min-h-[130vh] sm:h-screen flex max-lg:flex-col overflow-hidden justify-around " id="portrait">
    <div class="relative flex justify-center max-md:px-6 max-md:justify-center z-20">
        <div class="max-sm:h-[60vh] sm:min-w-[380px] xl:min-w-[640px] py-6 sm:py-20">
            <h4 id="first-line" class="flex text-[10vw] sm:text-[74px] xl:text-[100px] tracking-[4px] sm:leading-[86px]" />
            <h4 id="direction-mobile" class="direction-mobile hidden max-sm:flex items-center ease-in-out font-epilogue font-bold text-red-300 tracking-[10px]" style="font-size: clamp(30px, 12vw, 60px)">
                DIRECTION
            </h4>
            <h4 id="second-line" class="flex items-center text-[10vw] sm:text-[74px] xl:text-[100px] min-h-[10vw] sm:min-h-[120px] xl:min-h-[150px] tracking-[4px] leading-[60px] lg:leading-[160px]" />
            <div class="flex max-sm:mb-3 sm:mt-4 min-h-[12vw] sm:min-h-[120px] text-[14vw] sm:text-[84px] xl:text-[110px] ">
                <h3 id="third-line" class="business font-extrabold transition-all" />
                <span id="red-dot" class="hidden text-red-300">.</span>
            </div>
            <p id="description" class="description min-h-[100px] font-light lg:text-lg max-w-[480px] max-sm:mb-4">
                Whether you're a small startup or a large enterprise, Scarlet has the tools and expertise to help you achieve your business objectives. Join us today and discover the power of Scarlet! 
            </p>
        </div>
        <div class="relative">
            <div class="absolute black-box bg-black max-lg:top-[-20%] lg:top-0 max-lg:h-[220px] lg:h-[125px] w-[160px] z-20" />
            <h4 id="direction" class="direction hidden sm:flex ease-in-out font-epilogue font-bold leading-1 
            uppercase z-10 transition text-red-300 text-[82px] tracking-[10px] [writing-mode:vertical-lr] [text-orientation:mixed] ml-2">
                direction
            </h4>
        </div>
    </div>
    <div class="flex relative justify-center items-center lg:max-w-[500px] lg:h-[600px] py-10 z-10">
        <img id="neo-bg" class="neo-background absolute top-[60%] lg:top-[58%] lg:left-[-80%] w-[1200px] lg:w-[300%] max-w-none" src="/img/portrait/neo-ground.svg" />
        <ScarletLogo class="prisma bright portrait flex max-w-[60%] sm:max-w-[350px] z-20" />
    </div>
    <div class="lg:hidden absolute w-full bottom-0 left-0 h-[10vh] bg-gradient-to-t from-black z-10" />
</section>
<script>
    import { typeWritter } from '../../libs';
    let prisma_to = 0;
    
    function slide_word() {
        return new Promise((resolve) => {
            const mobile: string = window.matchMedia("(min-width: 640px)").matches ? '':'-mobile'; // h3 is desktop & h4 is mobile
            const direction_word = document.querySelector(`h4#direction${mobile}`);
            direction_word.classList.add('slided');
            direction_word.addEventListener('animationend', () => {
                resolve(1000);
            })
        })
    }
    function showPrisma(){
        const prisma = document.querySelector("svg#prisma");
        prisma.classList.add('show');
        prisma_to = setTimeout(() => {  
            prisma.classList.remove('show');
            prisma.classList.add('float');
        }, 950);
    }
    function showNeoBg(){
        const neo = document.querySelector("#neo-bg");
        neo.classList.add('slide-up');
    }

    (async function initialize_animation() {
        await typeWritter('Change The','first-line', 80);
        await slide_word();
        showNeoBg();
        showPrisma();
        await typeWritter('Of Your','second-line', 80);
        await typeWritter('Bussiness','third-line', 80);
        const description = document.querySelector("#description");
        description.classList.add('show');

    })();
    // now we need to chain the animations
</script>
<style>
section.portrait p.description {
    opacity: 0;
    transition: all 150ms ease-in-out;
}
section.portrait p.description.show {
    opacity: 1;
}

h4.direction, h4.direction-mobile {
    opacity: 0;
}
:is(h4, h4).direction.slided {
    opacity: 1;
    animation: slide-from-up .5s cubic-bezier(.3,.71,.18,1);
    -webkit-animation-fill-mode: forwards; /* Chrome 16+, Safari 4+ */
    -moz-animation-fill-mode: forwards;    /* FF 5+ */
    -o-animation-fill-mode: forwards;      /* Not implemented yet */
    -ms-animation-fill-mode: forwards;     /* IE 10+ */
    animation-fill-mode: forwards;   
}
@keyframes slide-from-up {
    from {
        transform: translateY(-120%);
    }to {
        transform: translateY(calc(0% + 120px));
    }
}
h4.direction-mobile.slided {
    opacity: 1;
    animation: slide-from-left .35s cubic-bezier(.3,.71,.18,1) forwards;
}

@keyframes slide-from-left {
    from {
        transform: translateX(-60%);
    }to {
        transform: translateY(0%);
    }
} 
svg.prisma {
    animation: float 7s cubic-bezier(.26,.06, 0, .21) infinite;
}
@media (min-width: 768px) {
    img.neo-background {
        opacity: 0;
    }
    img.neo-background.slide-up {
        animation: bg-slide-from-bottom 600ms ease-out forwards;
    }
    @keyframes bg-slide-from-bottom {
        from {
            opacity: 0;
            transform: translateY(-10%);
        } to {
            opacity: 1;
            transform: translateY(0%);
        }
    }
    svg.prisma {
        opacity: 0;
    }
    svg.prisma.show {
        opacity: 1;
        animation: prisma-slide-from-bottom 900ms ease-in-out forwards;
    }
    @keyframes prisma-slide-from-bottom {
        from {
            opacity: 0;
            transform: translateY(65%);
        }
        to {
            opacity: 1;
            transform: translateY(4%);
        }
    }
    svg.prisma.float {
        opacity: 1;
        
        transform: translateY(4%);
        animation: float 5s cubic-bezier(.26,.06, 0, .21) infinite;
    }
}
/* float or idle */
@keyframes float {
    0% {
        transform: translateY(4%);
    }
    50% {
        transform: translateY(0%);
    }
    100% {
        transform: translateY(4%);
    }
}
</style>
